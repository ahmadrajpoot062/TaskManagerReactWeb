{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmob3\\\\Desktop\\\\task-manager\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Routes, Route } from 'react-router-dom';\nimport ProtectedRoute from './Components/ProtectedRoute';\nimport Home from './Components/Home';\nimport Dashboard from './Components/Dashboard';\nimport Login from './Components/Login';\nimport Register from './Components/Register';\nimport CreateTask from './Components/CreateTask';\nimport Tasks from './Components/Tasks';\nimport TaskDetail from './Components/TaskDetail';\nimport Profile from './Components/Profile'; // Import Profile component\nimport { useState, useEffect } from 'react';\nimport { getTasksByUsername } from './Services/taskapi';\nimport { getUserByUsername } from './Services/userapi'; // Import getUserByUsername\nimport { getTasks } from './Services/taskapi';\nimport { useNavigate } from 'react-router-dom';\nimport api from './Services/api';\nimport AdminDashboard from './Components/AdminDashBoard';\nimport AllTasks from './Components/AllTasks';\nimport AdminProfile from './Components/AdminProfile';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [taskCreated, setTaskCreated] = useState(false);\n  const [statusUpdated, setStatusUpdated] = useState(false);\n  const [user, setUser] = useState(null); // State to store user details\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  //admin usernames are here and in the ProtectedRoutes \n  const adminUsernames = ['safee@admin'];\n  const [taskDeleted, setTaskDeleted] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await api.post('/Auth/login', formData);\n      const token = response.data.token;\n      const username = formData.username;\n      localStorage.setItem('token', token);\n      localStorage.setItem('username', username);\n      toast.success(\"Login Successful\");\n      setUsername(username);\n      if (adminUsernames.includes(username)) {\n        navigate('/admin-dashboard');\n      } else {\n        navigate('/dashboard');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed.\");\n    }\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const name = localStorage.getItem(\"username\");\n      try {\n        const fetchedTasks = name === 'safee@admin' ? await getTasks() : await getTasksByUsername(name);\n        setTasks(fetchedTasks);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n        setTasks([]); // Reset tasks to an empty array on error\n      }\n    };\n    fetchTasks();\n  }, [username, taskCreated, statusUpdated, user, taskDeleted]);\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const name = localStorage.getItem(\"username\");\n        const fetchedUser = await getUserByUsername(name);\n        setUser(fetchedUser);\n      } catch (error) {\n        console.error('Error fetching user:', error);\n      }\n    };\n    fetchUser();\n  }, [username]);\n  const countTasksByStatus = status => {\n    return tasks.filter(task => task.status === status).length;\n  };\n  const completedTasksCount = countTasksByStatus(2);\n  const inProgressTasksCount = countTasksByStatus(1);\n  const pendingTasksCount = countTasksByStatus(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 1000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          isAdminRoute: false,\n          children: /*#__PURE__*/_jsxDEV(Dashboard, {\n            completedTasksCount: completedTasksCount,\n            inProgressTasksCount: inProgressTasksCount,\n            pendingTasksCount: pendingTasksCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin-dashboard\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          isAdminRoute: true,\n          children: /*#__PURE__*/_jsxDEV(AdminDashboard, {\n            completedTasksCount: completedTasksCount,\n            inProgressTasksCount: inProgressTasksCount,\n            pendingTasksCount: pendingTasksCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 85\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          handleSubmit: handleSubmit,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/create-task\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          isAdminRoute: false,\n          children: /*#__PURE__*/_jsxDEV(CreateTask, {\n            username: username,\n            setTaskCreated: setTaskCreated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 82\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/tasks\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          isAdminRoute: false,\n          children: /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: tasks,\n            setTaskDeleted: setTaskDeleted\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 76\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/task/:id\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(TaskDetail, {\n            setStatusUpdated: setStatusUpdated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          isAdminRoute: false,\n          children: /*#__PURE__*/_jsxDEV(Profile, {\n            user: user,\n            handleLogout: handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 78\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/alltasks\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          isAdminRoute: true,\n          children: /*#__PURE__*/_jsxDEV(AllTasks, {\n            tasks: tasks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 78\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin-profile\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          isAdminRoute: true,\n          children: /*#__PURE__*/_jsxDEV(AdminProfile, {\n            user: user,\n            handleLogout: handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 83\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Pz1BACakUsGRXAXbIdXBwB4LgJE=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","ProtectedRoute","Home","Dashboard","Login","Register","CreateTask","Tasks","TaskDetail","Profile","useState","useEffect","getTasksByUsername","getUserByUsername","getTasks","useNavigate","api","AdminDashboard","AllTasks","AdminProfile","ToastContainer","toast","jsxDEV","_jsxDEV","App","_s","username","setUsername","tasks","setTasks","taskCreated","setTaskCreated","statusUpdated","setStatusUpdated","user","setUser","navigate","formData","setFormData","password","adminUsernames","taskDeleted","setTaskDeleted","handleSubmit","e","preventDefault","response","post","token","data","localStorage","setItem","success","includes","error","_error$response","_error$response$data","alert","message","handleChange","target","name","value","handleLogout","removeItem","fetchTasks","getItem","fetchedTasks","console","fetchUser","fetchedUser","countTasksByStatus","status","filter","task","length","completedTasksCount","inProgressTasksCount","pendingTasksCount","children","position","autoClose","fileName","_jsxFileName","lineNumber","columnNumber","path","element","isAdminRoute","_c","$RefreshReg$"],"sources":["C:/Users/mmob3/Desktop/task-manager/src/App.js"],"sourcesContent":["import { Routes, Route } from 'react-router-dom';\r\nimport ProtectedRoute from './Components/ProtectedRoute';\r\nimport Home from './Components/Home';\r\nimport Dashboard from './Components/Dashboard';\r\nimport Login from './Components/Login';\r\nimport Register from './Components/Register';\r\nimport CreateTask from './Components/CreateTask';\r\nimport Tasks from './Components/Tasks';\r\nimport TaskDetail from './Components/TaskDetail';\r\nimport Profile from './Components/Profile'; // Import Profile component\r\nimport { useState, useEffect } from 'react';\r\nimport { getTasksByUsername } from './Services/taskapi';\r\nimport { getUserByUsername } from './Services/userapi'; // Import getUserByUsername\r\nimport { getTasks } from './Services/taskapi';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from './Services/api';\r\nimport AdminDashboard from './Components/AdminDashBoard';\r\nimport AllTasks from './Components/AllTasks';\r\nimport AdminProfile from './Components/AdminProfile';\r\nimport { ToastContainer,toast } from 'react-toastify';\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [tasks, setTasks] = useState([]);\r\n  const [taskCreated, setTaskCreated] = useState(false);\r\n  const [statusUpdated, setStatusUpdated] = useState(false);\r\n  const [user, setUser] = useState(null); // State to store user details\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({ username: '', password: '' });\r\n  //admin usernames are here and in the ProtectedRoutes \r\n  const adminUsernames = ['safee@admin'];\r\n  const [taskDeleted,setTaskDeleted]=useState(false);\r\n \r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await api.post('/Auth/login', formData);\r\n      const token = response.data.token;\r\n      const username = formData.username;\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('username', username);\r\n      toast.success(\"Login Successful\");\r\n      setUsername(username);\r\n      if (adminUsernames.includes(username)) {\r\n        navigate('/admin-dashboard');\r\n      } else {\r\n        navigate('/dashboard');\r\n      }\r\n    } catch (error) {\r\n      alert(error.response?.data?.message || \"Login failed.\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    navigate('/login');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      const name = localStorage.getItem(\"username\");\r\n      try {\r\n        const fetchedTasks =\r\n          name === 'safee@admin'\r\n            ? await getTasks()\r\n            : await getTasksByUsername(name);\r\n        setTasks(fetchedTasks);\r\n      } catch (error) {\r\n        console.error('Error fetching tasks:', error);\r\n        setTasks([]); // Reset tasks to an empty array on error\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, [username, taskCreated, statusUpdated, user, taskDeleted]);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const name = localStorage.getItem(\"username\");\r\n        const fetchedUser = await getUserByUsername(name);\r\n        setUser(fetchedUser);\r\n      } catch (error) {\r\n        console.error('Error fetching user:', error);\r\n      }\r\n    };\r\n    fetchUser();\r\n\r\n  }, [username]);\r\n  const countTasksByStatus = (status) => {\r\n    return tasks.filter(task => task.status === status).length;\r\n  };\r\n\r\n  const completedTasksCount = countTasksByStatus(2);\r\n  const inProgressTasksCount = countTasksByStatus(1);\r\n  const pendingTasksCount = countTasksByStatus(0);\r\n  return (\r\n    <div>\r\n      <ToastContainer position=\"top-right\" autoClose={1000} />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/dashboard\" element={<ProtectedRoute isAdminRoute={false}><Dashboard completedTasksCount={completedTasksCount} inProgressTasksCount={inProgressTasksCount} pendingTasksCount={pendingTasksCount} /></ProtectedRoute>} />\r\n        <Route path=\"/admin-dashboard\" element={<ProtectedRoute isAdminRoute={true}><AdminDashboard completedTasksCount={completedTasksCount} inProgressTasksCount={inProgressTasksCount} pendingTasksCount={pendingTasksCount} /></ProtectedRoute>} />\r\n        <Route path=\"/login\" element={<Login handleSubmit={handleSubmit} handleChange={handleChange} />} />\r\n        <Route path=\"/register\" element={<Register />} />\r\n        <Route path=\"/create-task\" element={<ProtectedRoute isAdminRoute={false}><CreateTask username={username} setTaskCreated={setTaskCreated} /></ProtectedRoute>} />\r\n        <Route path=\"/tasks\" element={<ProtectedRoute isAdminRoute={false}><Tasks tasks={tasks} setTaskDeleted={setTaskDeleted}/></ProtectedRoute>} />\r\n        <Route path=\"/task/:id\" element={<ProtectedRoute><TaskDetail setStatusUpdated={setStatusUpdated} /></ProtectedRoute>} />\r\n        <Route path=\"/profile\" element={<ProtectedRoute isAdminRoute={false}><Profile user={user} handleLogout={handleLogout} /></ProtectedRoute>} />\r\n        <Route path=\"/alltasks\" element={<ProtectedRoute isAdminRoute={true}><AllTasks tasks={tasks} /></ProtectedRoute>} />\r\n        <Route path=\"/admin-profile\" element={<ProtectedRoute isAdminRoute={true}><AdminProfile user={user} handleLogout={handleLogout} /></ProtectedRoute>} />\r\n\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}